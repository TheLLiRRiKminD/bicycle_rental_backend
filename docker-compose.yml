version: '3'

services:
  db:
    restart: always
    image: postgres

    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  web:
    restart: always
    build: .
    tty: true
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8080"
    ports:
      - '8080:8080'
    env_file:
      - .env
    volumes:
      - .:/code
    depends_on:
      - db
    networks:
      - frontend
      - backend

  redis:
    image: redis:latest

  celery:
    build: .
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

volumes:
  pg_data:
  minio_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge